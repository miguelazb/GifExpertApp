{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","evt","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","requestURL","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","alt","src","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categorias","cat","ReactDOM","render","document","getElementById"],"mappings":"sPAyCeA,EAtCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAmBvC,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAIC,iBAEAJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAACS,GAAD,OAAYP,GAAZ,mBAA2BO,OACzCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SApBU,SAACP,GACnBF,EAAcE,EAAIQ,OAAOF,UAqBrB,2BACID,KAAK,SACLC,MAAM,c,uBC3BTG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,UAJH,uCAIG,oBAHP,mCAGO,cAC4CC,UAAUH,GADtD,kBAFN,GAEM,SAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QARvB,kBAWZL,GAXY,4CAAH,sDCULQ,EAZK,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAI1B,OACI,yBAAKI,UAAU,0CACX,yBAAKC,IAAMN,EAAQO,IAAMN,IACzB,+BAAMD,EAAN,OCeGQ,EAnBC,SAAC,GAAmB,IAAjBpB,EAAgB,EAAhBA,UAAgB,ECFP,SAACA,GAAe,IAAD,EACbd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAgBvC,OAVAC,qBAAU,WACNzB,EAAQC,GAAWyB,MAAK,SAAAjB,GACpBe,EAAS,CACLhB,KAAMC,EACNa,SAAS,SAIlB,CAACrB,IAEGsB,EDZyBI,CAAc1B,GAAhCQ,EAFiB,EAEvBD,KAAYc,EAFW,EAEXA,QAGpB,OACI,oCACI,wBAAIJ,UAAU,yCAAd,IAAwDjB,EAAxD,KACEqB,GAAW,uBAAGJ,UAAU,oCAAb,iBAEb,yBAAKA,UAAU,aACVT,EAAKC,KAAI,SAAAC,GACN,OAAO,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEsC1CkB,EAnDM,WAEjB,IAFuB,EAIa1C,mBAFV,CAAC,kBAFJ,mBAIhB2C,EAJgB,KAIJ5C,EAJI,KAyBvB,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ4C,EAAWpB,KAAI,SAAAqB,GAAG,OACd,kBAAC,EAAD,CACIH,IAAKG,EACL9B,UAAW8B,UCnCvCC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.2162ca65.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategorias }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleChanges = (evt) => {\r\n        setInputValue(evt.target.value);\r\n    }\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ) {\r\n\r\n            setCategorias((cats) => [ inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleChanges }\r\n            />\r\n            <input\r\n                type=\"submit\"\r\n                value=\"Agregar\"\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","const endpointURL = 'https://api.giphy.com/v1/gifs/search';\r\nconst api_key = 'zIHXbrmUQ5phEWLtK7rdFHDSdwUHThZD';\r\nconst cantidad = 5;\r\n\r\nexport const getGifs = async ( categoria) => {\r\n    const requestURL = `${ endpointURL }?api_key=${ api_key }&q=${ encodeURI(categoria) }&limit=${cantidad}`;\r\n    const resp = await fetch(requestURL);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n    // const { title, img } = gif;\r\n    // console.log(`id: ${id}, title: ${title}, `)\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img alt={ title } src={ url }/> \r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nconst GifGrid = ({ categoria }) => {\r\n\r\n    const { data: gifs, loading } = useFetchGifs( categoria );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeInDown'> {categoria} </h3>\r\n            { loading && <p className='animate__animated animate__flash'> Cargando... </p> }\r\n\r\n            <div className='card-grid'>\r\n                {gifs.map(img => {\r\n                    return <GifGridItem key={img.id} {...img} />\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n} \r\n\r\nexport default GifGrid;","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(categoria).then(gifs => {\r\n            setState({\r\n                data: gifs,\r\n                loading: false,\r\n            });\r\n\r\n        });\r\n    }, [categoria]);\r\n\r\n    return state;\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const arregloCategorias = ['One Punch Man'];\r\n\r\n    const [categorias, setCategorias] = useState(arregloCategorias);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategorias([...categorias, `CategorÃ­a ${categorias.length + 1}`]);\r\n    // }\r\n\r\n    const valley = (n, s) => {\r\n        let lvl = 0;\r\n        let inValley = false;\r\n        let count = 0;\r\n        for (let char of s) {\r\n            lvl += char === 'U' ? 1 : -1;\r\n            if (lvl == 0 && inValley) {\r\n                count++;\r\n            }\r\n            inValley = lvl < 0;\r\n        }\r\n        return count;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1> GifExpertApp </h1>\r\n            <AddCategory setCategorias={setCategorias} />\r\n            <hr />\r\n\r\n            <ul>\r\n                {\r\n                    categorias.map(cat => (\r\n                        <GifGrid\r\n                            key={cat}\r\n                            categoria={cat}\r\n                        />\r\n                    ))\r\n\r\n                }\r\n\r\n            </ul>\r\n\r\n        </>\r\n\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}